<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.schoolTao.dao.NeedMapper">
  <resultMap id="BaseResultMap" type="com.schoolTao.pojo.Need">
    <id column="need_id" jdbcType="INTEGER" property="needId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="need_content" jdbcType="VARCHAR" property="needContent" />
    <result column="need_pics" jdbcType="VARCHAR" property="needPics" />
    <result column="need_view_num" jdbcType="INTEGER" property="needViewNum" />
    <result column="need_time" jdbcType="TIMESTAMP" property="needTime" />
    <result column="need_comment_num" jdbcType="INTEGER" property="needCommentNum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BaseResultMapAndUser" type="com.schoolTao.pojo.Need">
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_sex" jdbcType="CHAR" property="userSex" />
    <result column="user_avater" jdbcType="VARCHAR" property="userAvater" />
    <result column="user_vip" jdbcType="CHAR" property="userVip" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    need_id, user_id, need_content, need_pics, need_view_num, need_time, need_comment_num
  </sql>
  <select id="selectNeedAndUser" parameterType="com.schoolTao.pojo.NeedExample" resultMap="BaseResultMapAndUser">
    select * from need,user where need.user_id = user.user_id ORDER BY need.need_time DESC  
  </select>
  <select id="selectNeedAndUser2" parameterType="com.schoolTao.pojo.NeedExample" resultMap="BaseResultMapAndUser">
    select * from need,user where need.user_id = user.user_id ORDER BY need.need_view_num DESC  
  </select>
  <select id="selectByExample" parameterType="com.schoolTao.pojo.NeedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from need
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from need
    where need_id = #{needId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from need
    where need_id = #{needId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.schoolTao.pojo.NeedExample">
    delete from need
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.schoolTao.pojo.Need">
    insert into need (need_id, user_id, need_content, 
      need_pics, need_view_num, need_time, 
      need_comment_num)
    values (#{needId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{needContent,jdbcType=VARCHAR}, 
      #{needPics,jdbcType=VARCHAR}, #{needViewNum,jdbcType=INTEGER}, #{needTime,jdbcType=TIMESTAMP}, 
      #{needCommentNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.schoolTao.pojo.Need">
    insert into need
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="needId != null">
        need_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="needContent != null">
        need_content,
      </if>
      <if test="needPics != null">
        need_pics,
      </if>
      <if test="needViewNum != null">
        need_view_num,
      </if>
      <if test="needTime != null">
        need_time,
      </if>
      <if test="needCommentNum != null">
        need_comment_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="needId != null">
        #{needId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="needContent != null">
        #{needContent,jdbcType=VARCHAR},
      </if>
      <if test="needPics != null">
        #{needPics,jdbcType=VARCHAR},
      </if>
      <if test="needViewNum != null">
        #{needViewNum,jdbcType=INTEGER},
      </if>
      <if test="needTime != null">
        #{needTime,jdbcType=TIMESTAMP},
      </if>
      <if test="needCommentNum != null">
        #{needCommentNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.schoolTao.pojo.NeedExample" resultType="java.lang.Long">
    select count(*) from need
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update need
    <set>
      <if test="record.needId != null">
        need_id = #{record.needId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.needContent != null">
        need_content = #{record.needContent,jdbcType=VARCHAR},
      </if>
      <if test="record.needPics != null">
        need_pics = #{record.needPics,jdbcType=VARCHAR},
      </if>
      <if test="record.needViewNum != null">
        need_view_num = #{record.needViewNum,jdbcType=INTEGER},
      </if>
      <if test="record.needTime != null">
        need_time = #{record.needTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.needCommentNum != null">
        need_comment_num = #{record.needCommentNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update need
    set need_id = #{record.needId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      need_content = #{record.needContent,jdbcType=VARCHAR},
      need_pics = #{record.needPics,jdbcType=VARCHAR},
      need_view_num = #{record.needViewNum,jdbcType=INTEGER},
      need_time = #{record.needTime,jdbcType=TIMESTAMP},
      need_comment_num = #{record.needCommentNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.schoolTao.pojo.Need">
    update need
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="needContent != null">
        need_content = #{needContent,jdbcType=VARCHAR},
      </if>
      <if test="needPics != null">
        need_pics = #{needPics,jdbcType=VARCHAR},
      </if>
      <if test="needViewNum != null">
        need_view_num = #{needViewNum,jdbcType=INTEGER},
      </if>
      <if test="needTime != null">
        need_time = #{needTime,jdbcType=TIMESTAMP},
      </if>
      <if test="needCommentNum != null">
        need_comment_num = #{needCommentNum,jdbcType=INTEGER},
      </if>
    </set>
    where need_id = #{needId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.schoolTao.pojo.Need">
    update need
    set user_id = #{userId,jdbcType=INTEGER},
      need_content = #{needContent,jdbcType=VARCHAR},
      need_pics = #{needPics,jdbcType=VARCHAR},
      need_view_num = #{needViewNum,jdbcType=INTEGER},
      need_time = #{needTime,jdbcType=TIMESTAMP},
      need_comment_num = #{needCommentNum,jdbcType=INTEGER}
    where need_id = #{needId,jdbcType=INTEGER}
  </update>
  <update id="incNum" parameterType="java.lang.Integer">
    update need
    set need_comment_num = need_comment_num + 1
    where need_id = #{needId,jdbcType=INTEGER}
  </update>
  <update id="addNum" parameterType="java.lang.Integer">
    update need
    set need_view_num = need_view_num + 1
    where need_id = #{needId,jdbcType=INTEGER}
  </update>
</mapper>